version: '3.3'

networks:
  caddy:
    name: caddy
    external: true
services:
  evolution_api:
    container_name: evolution_api
    image: davidsongomes/evolution-api:latest
    restart: always
    ports:
      - 8080:8080
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    environment:
      # Configura o evolution-api para ler as variáveis de ambiente
      - SERVER_URL=https://api3.wkhosting.online
      - DOCKER_ENV=true
      - DEL_INSTANCE=false
      - AUTHENTICATION_JWT_EXPIRIN_IN=0
      # Define a porta no qual o evolution-api vai rodar
      - SERVER_PORT=8080
      # Configura o Nível de Log
      - LOG_LEVEL=ERROR,WARN,DEBUG,INFO,LOG,VERBOSE,DARK
      # Configura o evolution-api para autenticar como API Key
      - AUTHENTICATION_TYPE=apikey
      # Define a API Key Global
      - AUTHENTICATION_API_KEY=820510
      # Habilita os Webhooks
      - WEBHOOK_GLOBAL_ENABLED=false
      # Define o endereço do Webhook
      - WEBHOOK_GLOBAL_URL=https://webhook.dominio.com/webhook
      # Configura o dispositibo
      - CONFIG_SESSION_PHONE_CLIENT='Evolution API'
      - CONFIG_SESSION_PHONE_NAME=Chrome
      # Habilita o Redis para armazenar a sessão
      - REDIS_ENABLED=false
      # Define o caminho do Redis
      - REDIS_URI=redis://redis/1
      - REDIS_PREFIX_KEY=evolution
      # Exponer info sobre instancia
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
    command: ['node', './dist/src/main.js']
    labels:
      caddy: api3.wkhosting.online
      caddy.reverse_proxy: "{{upstreams 8080}}"
    networks:
      - caddy
    expose:
      - 8080

volumes:
  evolution_instances:
  evolution_store:
